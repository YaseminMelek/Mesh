import {
  require_Vec2D,
  require_internals
} from "./chunk-HPGC77CE.js";
import {
  __commonJS,
  init_buffer,
  init_process
} from "./chunk-PO7TFOVG.js";

// node_modules/toxiclibsjs/physics2d/behaviors/AttractionBehavior.js
var require_AttractionBehavior = __commonJS({
  "node_modules/toxiclibsjs/physics2d/behaviors/AttractionBehavior.js"(exports, module) {
    init_process();
    init_buffer();
    var AttractionBehavior = function(attractor, radius, strength, jitter) {
      if (arguments.length < 3) {
        throw new Error("Constructor received incorrect Parameters");
      }
      this.jitter = jitter || 0;
      this.attractor = attractor;
      this.strength = strength;
      this.setRadius(radius);
    };
    AttractionBehavior.prototype = {
      applyBehavior: function(p) {
        var delta = this.attractor.sub(p);
        var dist = delta.magSquared();
        if (dist < this.radiusSquared) {
          var f = delta.normalizeTo(1 - dist / this.radiusSquared).jitter(this.jitter).scaleSelf(this.attrStrength);
          p.addForce(f);
        }
      },
      configure: function(timeStep) {
        this.timeStep = timeStep;
        this.setStrength(this.strength);
      },
      getAttractor: function() {
        return this.attractor;
      },
      getJitter: function() {
        return this.jitter;
      },
      getRadius: function() {
        return this.radius;
      },
      getStrength: function() {
        return this.strength;
      },
      setAttractor: function(attractor) {
        this.attractor = attractor;
      },
      setJitter: function(jitter) {
        this.jitter = jitter;
      },
      setRadius: function(r) {
        this.radius = r;
        this.radiusSquared = r * r;
      },
      setStrength: function(strength) {
        this.strength = strength;
        this.attrStrength = strength * this.timeStep;
      }
    };
    module.exports = AttractionBehavior;
  }
});

// node_modules/toxiclibsjs/physics2d/behaviors/ConstantForceBehavior.js
var require_ConstantForceBehavior = __commonJS({
  "node_modules/toxiclibsjs/physics2d/behaviors/ConstantForceBehavior.js"(exports, module) {
    init_process();
    init_buffer();
    var Vec2D = require_Vec2D();
    var ConstantForceBehavior = function(force) {
      this.force = force;
      this.scaledForce = new Vec2D();
      this.timeStep = 0;
    };
    ConstantForceBehavior.prototype = {
      applyBehavior: function(p) {
        p.addForce(this.scaledForce);
      },
      configure: function(timeStep) {
        this.timeStep = timeStep;
        this.setForce(this.force);
      },
      getForce: function() {
        return this.force;
      },
      setForce: function(forceVec) {
        this.force = forceVec;
        this.scaledForce = this.force.scale(this.timeStep);
      },
      toString: function() {
        return "behavior force: " + this.force + " scaledForce: " + this.scaledForce + " timeStep: " + this.timeStep;
      }
    };
    module.exports = ConstantForceBehavior;
  }
});

// node_modules/toxiclibsjs/physics2d/behaviors/GravityBehavior.js
var require_GravityBehavior = __commonJS({
  "node_modules/toxiclibsjs/physics2d/behaviors/GravityBehavior.js"(exports, module) {
    init_process();
    init_buffer();
    var internals = require_internals();
    var ConstantForceBehavior = require_ConstantForceBehavior();
    var GravityBehavior = function(gravityVec) {
      ConstantForceBehavior.call(this, gravityVec);
    };
    internals.extend(GravityBehavior, ConstantForceBehavior);
    GravityBehavior.prototype.configure = function(timeStep) {
      this.timeStep = timeStep;
      this.scaledForce = this.force.scale(timeStep * timeStep);
    };
    module.exports = GravityBehavior;
  }
});

// node_modules/toxiclibsjs/physics2d/behaviors.js
var require_behaviors = __commonJS({
  "node_modules/toxiclibsjs/physics2d/behaviors.js"(exports) {
    init_process();
    init_buffer();
    var AttractionBehavior = require_AttractionBehavior();
    var ConstantForceBehavior = require_ConstantForceBehavior();
    var GravityBehavior = require_GravityBehavior();
    exports.AttractionBehavior = AttractionBehavior;
    exports.ConstantForceBehavior = ConstantForceBehavior;
    exports.GravityBehavior = GravityBehavior;
  }
});

export {
  require_GravityBehavior,
  require_behaviors
};
//# sourceMappingURL=chunk-U2CYC5IP.js.map
