{
  "version": 3,
  "sources": ["../../toxiclibsjs/physics2d/VerletParticle2D.js", "../../toxiclibsjs/physics2d/ParticlePath2D.js", "../../toxiclibsjs/physics2d/VerletSpring2D.js", "../../toxiclibsjs/physics2d/ParticleString2D.js", "../../toxiclibsjs/physics2d/PullBackString2D.js", "../../toxiclibsjs/physics2d/VerletConstrainedSpring2D.js", "../../toxiclibsjs/physics2d/VerletMinDistanceSpring2D.js", "../../toxiclibsjs/physics2d/VerletPhysics2D.js", "../../toxiclibsjs/physics2d/constraints/AngularConstraint.js", "../../toxiclibsjs/physics2d/constraints/AxisConstraint.js", "../../toxiclibsjs/physics2d/constraints/CircularConstraint.js", "../../toxiclibsjs/physics2d/constraints/MaxConstraint.js", "../../toxiclibsjs/physics2d/constraints/MinConstraint.js", "../../toxiclibsjs/physics2d/constraints/RectConstraint.js", "../../toxiclibsjs/physics2d/constraints.js", "../../toxiclibsjs/physics2d.js"],
  "sourcesContent": ["\n\nvar internals = require('../internals'),\n\tVec2D = require('../geom/Vec2D');\n\nvar\tVerletParticle2D = function(x,y,w){\n\tthis.force = new Vec2D();\n\tif( internals.has.XY( x ) ){\n\t\tif( internals.is.VerletParticle2D( x ) ){\n\n\t\t\ty = x.y;\n\t\t\tw = x.weight;\n\t\t\tx = x.x;\n\t\t\tthis.isLocked = x.isLocked;\n\n\t\t} else if(y === undefined){\n\t\t\ty = x.y;\n\t\t\tw = 1;\n\t\t\tx = x.x;\n\t\t} else {\n\t\t\tw = y;\n\t\t\ty = x.y;\n\t\t\tx = x.x;\n\t\t}\n\t}\n\tVec2D.call(this, x,y);\n\tthis.isLocked = false;\n\tthis.prev = new Vec2D(this);\n\tthis.temp = new Vec2D();\n\tw = w || 1;\n\tthis.setWeight(w);\n};\n\ninternals.extend(VerletParticle2D,Vec2D);\n\nVerletParticle2D.prototype.addBehavior = function(behavior,timeStep){\n\tif(this.behaviors === undefined){\n\t\tthis.behaviors = [];\n\t}\n\tif(behavior === undefined){\n\t\tthrow new Error(\"behavior was undefined\");\n\t}\n\ttimeStep = (timeStep === undefined)? 1 : timeStep;\n\tbehavior.configure(timeStep);\n\tthis.behaviors.push(behavior);\n\treturn this;\n};\n\nVerletParticle2D.prototype.addConstraint = function(c){\n\tif(this.constraints === undefined){\n\t\tthis.constraints = [];\n\t}\n\tthis.constraints.push(c);\n\treturn this;\n};\n\nVerletParticle2D.prototype.addForce = function(f){\n\tthis.force.addSelf(f);\n\treturn this;\n};\n\nVerletParticle2D.prototype.addVelocity = function(v){\n\tthis.prev.subSelf(v);\n\treturn this;\n};\n\nVerletParticle2D.prototype.applyBehaviors = function(){\n\tif(this.behaviors !== undefined){\n\t\tvar i = 0, len = this.behaviors.length;\n\t\tfor(i = 0;i<len;i++){\n\t\t\tthis.behaviors[i].applyBehavior(this);\n\t\t}\n\t}\n};\n\nVerletParticle2D.prototype.applyConstraints = function(){\n\tif(this.constraints !== undefined){\n\t\tvar i = 0, len = this.constraints.length;\n\t\tfor(i =0;i<len;i++){\n\t\t\tthis.constraints[i].applyConstraint(this);\n\t\t}\n\t}\n};\n\n\nVerletParticle2D.prototype.clearForce = function(){\n\tthis.force.clear();\n\treturn this;\n};\n\nVerletParticle2D.prototype.clearVelocity = function(){\n\tthis.prev.set(this);\n\treturn this;\n};\n\nVerletParticle2D.prototype.getInvWeight = function(){\n\treturn this.invWeight;\n};\n\nVerletParticle2D.prototype.getPreviousPosition = function(){\n\treturn this.prev;\n};\n\nVerletParticle2D.prototype.getVelocity = function(){\n\treturn this.sub(this.prev);\n};\n\nVerletParticle2D.prototype.getWeight = function(){\n\treturn this.weight;\n};\n\nVerletParticle2D.prototype.lock = function(){\n\tthis.isLocked = true;\n\treturn this;\n};\n\nVerletParticle2D.prototype.removeAllBehaviors = function(){\n\tthis.behaviors = [];\n\treturn this;\n};\n\nVerletParticle2D.prototype.removeAllConstraints = function(){\n\tthis.constraints = [];\n\treturn this;\n};\n\nVerletParticle2D.prototype.removeBehavior = function(b){\n\treturn internals.removeItemFrom(b,this.behaviors);\n};\n\nVerletParticle2D.prototype.removeConstraint = function(c){\n\treturn internals.removeItemFrom(c,this.constraints);\n};\n\nVerletParticle2D.prototype.scaleVelocity = function(scl){\n\tthis.prev.interpolateToSelf(this,1 - scl);\n\treturn this;\n};\n\nVerletParticle2D.prototype.setPreviousPosition = function(p){\n\tthis.prev.set(p);\n\treturn this;\n};\n\nVerletParticle2D.prototype.setWeight = function(w){\n\tthis.weight = w;\n\tthis.invWeight = (w !== 0) ? 1 / w : 0; //avoid divide by zero\n};\n\nVerletParticle2D.prototype.unlock = function() {\n\tthis.clearVelocity();\n\tthis.isLocked = false;\n\treturn this;\n};\n\nVerletParticle2D.prototype.update = function(){\n\n\tif(!this.isLocked){\n\t\tthis.applyBehaviors();\n\t\t//applyForce() - inline\n        this.temp.set(this);\n        this.addSelf(this.sub(this.prev).addSelf(this.force.scale(this.weight)));\n        this.prev.set(this.temp);\n        this.force.clear();\n        //\n\t\tthis.applyConstraints();\n\t}\n};\n\nmodule.exports = VerletParticle2D;\n\n", "\n\n    var internals = require('../internals'),\n        Spline2D = require('../geom/Spline2D'),\n        VerletParticle2D = require('./VerletParticle2D');\n\n    var\tParticlePath2D = function(points){\n        Spline2D.call(this,points);\n        this.particles = [];\n    };\n\n    internals.extend(ParticlePath2D,Spline2D);\n\n    //public\n    ParticlePath2D.prototype.createParticles = function(physics,subDiv,step,mass){\n        this.particles = [];\n        this.computeVertices(subDiv);\n        var i = 0;\n        var dv = this.getDecimatedVertices(step,true);\n        for(i = 0; i < dv.length; i++){\n            var v = dv[i];\n            var p = new VerletParticle2D(v,mass);\n            this.particles.push(p);\n            physics.addParticle(p);\n        }\n        return this.particles;\n    };\n\n    module.exports = ParticlePath2D;\n\n", "\nvar\tVerletSpring2D = function(a,b,len,str){\n\tthis.a = a;\n\tthis.b = b;\n\tthis.restLength = len;\n\tthis.strength = str;\n};\n\nVerletSpring2D.EPS = 1e-6;\n\nVerletSpring2D.prototype = {\n\tgetRestLength: function(){\n\t\treturn this.restLength;\n\t},\n\t\n\tgetStrength: function(){\n\t\treturn this.strength;\n\t},\n\t\n\tlockA: function(s){\n\t\tthis.isALocked = s;\n\t\treturn this;\n\t},\n\t\n\tlockB: function(s){\n\t\tthis.isBLocked = s;\n\t\treturn this;\n\t},\n\t\n\tsetRestLength: function(len){\n\t\tthis.restLength = len;\n\t\tthis.restLengthSquared = len * len;\n\t\treturn this;\n\t},\n\t\n\tsetStrength: function(strength){\n\t\tthis.strength = strength;\n\t\treturn this;\n\t},\n\t\n\tupdate: function(applyConstraints){ //protected\n\t\tvar delta = this.b.sub(this.a);\n\t\t//add minute offset to avoid div-by-zero errors\n\t\tvar dist = delta.magnitude() + VerletSpring2D.EPS;\n\t\tvar normDistStrength = (dist - this.restLength) / (dist * (this.a.invWeight + this.b.invWeight)) * this.strength;\n\t\tif(!this.a.isLocked && !this.isALocked){\n\t\t\tthis.a.addSelf(\n\t\t\t\tdelta.scale(normDistStrength * this.a.invWeight)\n\t\t\t);\n\t\t\tif(applyConstraints){\n\t\t\t\tthis.a.applyConstraints();\n\t\t\t}\n\t\t}\n\t\tif(!this.b.isLocked && !this.isBLocked){\n\t\t\tthis.b.addSelf(\n\t\t\t\tdelta.scale(-normDistStrength * this.b.invWeight)\n\t\t\t);\n\t\t\tif(applyConstraints){\n\t\t\t\tthis.b.applyConstraints();\n\t\t\t}\n\t\t}\n\t}\n};\n\nmodule.exports = VerletSpring2D;\n\n", "\n\nvar VerletParticle2D = require('./VerletParticle2D'),\n\tVerletSpring2D = require('./VerletSpring2D');\n\n/**\n* Utility builder/grouping/management class to connect a set of particles into\n* a physical string/thread. Custom spring types can be used by subclassing this\n* class and overwriting the\n* {@link #createSpring(VerletParticle2D, VerletParticle2D, float, float)}\nmethod.\n*/\n\n /**\n  Construct a ParticleString2D,\n  parameter options:\n  1 - options object\n  3 - VerletPhysics2D physics, Array<VerletParticle2D> plist, Number strength\n  6 - VerletPhysics2D physic, Vec2D pos, Vec2D step, Number num, Number mass, Number strength\n  */\n  \nvar\tParticleString2D = function(){\n\tvar opts = {\n\t\tphysics: undefined,\n\t\tplist: undefined,\n\t\tpos: undefined,\n\t\tstep: undefined,\n\t\tnum: undefined,\n\t\tmass: undefined,\n\t\tstrength: undefined\n\t},\n\tis6ParamConstructor = false;\n\tif(arguments.length === 0){\n\t\tthrow new Error(\"Incorrect Parameters\");\n\t} else if(arguments.length == 1){ //options object\n\t\tvar arg = arguments[0];\n\t\tfor(var prop in arg){\n\t\t\topts[prop] = arg[prop];\n\t\t}\n\t} else {\n\t\topts.physics = arguments[0];\n\t\tif(arguments.length == 6){\n\t\t\topts.pos = arguments[1];\n\t\t\topts.step = arguments[2];\n\t\t\topts.num = arguments[3];\n\t\t\topts.mass = arguments[4];\n\t\t\topts.strength = arguments[5];\n\t\t} else {\n\t\t\topts.plist = arguments[1];\n\t\t\topts.strength = arguments[2];\n\t\t}\n\t}\n\tif(opts.num !== undefined && opts.pos !== undefined && opts.step !== undefined && opts.mass !== undefined){\n\t\tis6ParamConstructor = true;\n\t}\n\tif(!is6ParamConstructor && opts.plist === undefined){\n\t\tthrow new Error(\"Incorrect Parameters, please supply plist or num, pos, step & mass\");\n\t}\n\t\n\t\n\tthis.physics = opts.physics;\n\tthis.links = [];\n\t\n\tvar prev,\n\t\tp,\n\t\ts,\n\t\tstrength,\n\t\ti = 0;\n\t\n\t\n\tif(is6ParamConstructor){\n\t\tvar pos = opts.pos.copy(),\n\t\t\tstep = opts.step,\n\t\t\tmass = opts.mass,\n\t\t\tlen = step.magnitude();\n\t\tthis.particles = [];\n\t\tstrength = opts.strength;\n\t\t\n\t\tfor(i = 0; i < opts.num; i++){\n\t\t\tp = new VerletParticle2D(pos.copy(),mass);\n\t\t\tthis.particles.push(p);\n\t\t\tthis.physics.particles.push(p);\n\t\t\tif(prev !== undefined){\n\t\t\t\ts = this.createSpring(prev,p,len,strength);\n\t\t\t\tthis.links.push(s);\n\t\t\t\tthis.physics.addSpring(s);\n\t\t\t}\n\t\t\tprev = p;\n\t\t\tpos.addSelf(step);\n\t\t}\n\t} else {\n\t\tstrength = opts.strength;\n\t\tthis.particles = opts.plist || [];\n\n\t\t\n\t\tfor(i = 0; i < this.particles.length; i++){\n\t\t\tp = this.particles[i];\n\t\t\tthis.physics.addParticle(p);\n\t\t\tif(prev !== undefined){\n\t\t\t\ts = this.createSpring(prev,p,prev.distanceTo(p),strength);\n\t\t\t\tthis.links.push(s);\n\t\t\t\tthis.physics.addSpring(s);\t\n\t\t\t}\n\t\t\tprev = p;\n\t\t}\n\t}\n }; \nParticleString2D.prototype = {\n\tclear: function(){\n\t\tfor(var i = 0, len = this.links.length; i < len; i++){\n\t\t\tthis.physics.removeSpringElements(this.links[i]);\n\t\t}\n\t\tthis.particles = [];\n\t\tthis.links = [];\n\t},\n\tcreateSpring: function(a,b,len,strength){\n\t\treturn new VerletSpring2D(a,b,len,strength);\n\t},\n\t\n\tgetHead: function(){\n\t\treturn this.particles[0];\n\t},\n\t\n\tgetNumParticles: function(){\n\t\treturn this.particles.length;\n\t},\n\t\n\tgetTail: function(){\n\t\treturn this.particles[this.particles.length-1];\n\t}\n};\n\nmodule.exports = ParticleString2D;\n\n", "\n\nvar internals = require('../internals'),\n\tVerletSpring2D = require('./VerletSpring2D');\n\n/**\n* Creates a pullback spring (default restlength=0.5) between 2 particles and\n* locks the first one given at the current position. The spring is only\n* enforced if the current length of the spring exceeds the rest length. This\n* behaviour is the opposite to the {@link VerletMinDistanceSpring2D}.\n*/\n \n var PullBackString2D = function(a,b,strength){\n\tVerletSpring2D.apply(this,[a,b,0,strength]);\n\ta.lock();\n\tthis.setRestLength(0.5);\n };\n internals.extend(PullBackString2D,VerletSpring2D);\n\n PullBackString2D.prototype.update = function(applyConstraints){\n\tif(this.b.distanceToSquared(this.a) > this.restLengthSquared){\n\t\tthis.parent.update.call(this,applyConstraints);\n\t}\n };\n\n module.exports = PullBackString2D;\n\n", "\n\nvar internals = require('../internals'),\n    VerletSpring2D = require('./VerletSpring2D');\n\nvar VerletConstrainedSpring2D = function(particleA, particleB, len, str, limit){\n\tVerletSpring2D.call(this,particleA,particleB,len,str);\n\tthis.limit = (limit === undefined) ? Number.MAX_VALUE : limit;\n};\n\ninternals.extend(VerletConstrainedSpring2D,VerletSpring2D);\n\nVerletConstrainedSpring2D.update = function(applyConstraints){\n\tvar delta = this.b.sub(this.a);\n    // add minute offset to avoid div-by-zero errors\n    var dist = delta.magnitude() + VerletSpring2D.EPS;\n    var normDistStrength = (dist - this.restLength) / (dist * (this.a.invWeight + this.b.invWeight))* this.strength;\n    if (!this.a.isLocked && !this.isALocked) {\n        this.a.addSelf(delta.scale(normDistStrength * this.a.invWeight).limit(this.limit));\n        if (applyConstraints) {\n            this.a.applyConstraints();\n        }\n    }\n    if (!this.b.isLocked && !this.isBLocked) {\n        this.b.subSelf(delta.scale(normDistStrength * this.b.invWeight).limit(this.limit));\n        if (applyConstraints) {\n            this.b.applyConstraints();\n        }\n    }\n};\n\nmodule.exports = VerletConstrainedSpring2D;\n\n", "\n\nvar internals = require('../internals'),\n\tVerletSpring2D = require('./VerletSpring2D');\n\nvar\tVerletMinDistanceSpring2D = function(particleA,particleB,len,str){\n\tVerletSpring2D.call(this,particleA,particleB,len,str);\n\tthis.setRestLength(len);\n};\n\ninternals.extend(VerletMinDistanceSpring2D,VerletSpring2D);\n\nVerletMinDistanceSpring2D.prototype.update = function(applyConstraints){\n\tif(this.b.distanceToSquared(this.a) < this.restLengthSquared){\n\t\tthis.parent.update.call(this,applyConstraints);\n\t}\n};\n\nmodule.exports = VerletMinDistanceSpring2D;\n\n", "\n\n    var internals = require('../internals'),\n        GravityBehavior = require('./behaviors/GravityBehavior'),\n        Rect = require('../geom/Rect'),\n        Vec2D = require('../geom/Vec2D'),\n        id = 0;\n\n    var VerletPhysics2D = function(gravity, numIterations, drag, timeStep) {\n        var opts = {\n            numIterations: 50,\n            drag: 0,\n            timeStep: 1\n        };\n        var a;\n        if( arguments.length == 1 && (arguments[0].gravity || arguments[0].numIterations || arguments[0].timeStep || arguments[0].drag) ){ //options object literal\n            a = arguments[0];\n            opts.gravity = a.gravity;\n            opts.numIterations = a.numIterations || opts.numIterations;\n            opts.drag = a.drag || opts.drag;\n            opts.timeStep = a.timeStep || opts.timeStep;\n        } else if( arguments.length == 1){\n            opts.gravity = gravity; //might be Vec2D, will get handled below\n        } else if( arguments.length == 4 ){\n            opts.gravity = gravity;\n            opts.numIterations = numIterations;\n            opts.drag = drag;\n            opts.timeStep = timeStep;\n        }\n\n        this.behaviors = [];\n        this.particles = [];\n        this.springs = [];\n        this.numIterations = opts.numIterations;\n        this.timeStep = opts.timeStep;\n        this.setDrag(opts.drag);\n        if( opts.gravity ){\n            if( internals.has.XY( opts.gravity ) ){\n                opts.gravity = new GravityBehavior( new Vec2D(opts.gravity) );\n            }\n            this.addBehavior( opts.gravity );\n        }\n        this.id = id++;\n    };\n\n    VerletPhysics2D.addConstraintToAll = function(c, list){\n        for(var i=0;i<list.length;i++){\n            list[i].addConstraint(c);\n        }\n    };\n\n    VerletPhysics2D.removeConstraintFromAll = function(c,list){\n        for(var i=0;i<list.length;i++){\n            list[i].removeConstraint(c);\n        }\n    };\n\n    VerletPhysics2D.prototype = {\n\n        addBehavior: function(behavior){\n            behavior.configure(this.timeStep);\n            this.behaviors.push(behavior);\n        },\n\n        addParticle: function(p){\n            this.particles.push(p);\n            return this;\n        },\n\n        addSpring: function(s){\n            if(this.getSpring(s.a,s.b) === undefined){\n                this.springs.push(s);\n            }\n            return this;\n        },\n\n        clear: function(){\n            this.particles = [];\n            this.springs = [];\n            return this;\n        },\n\n        constrainToBounds: function(){ //protected\n            var p,\n                i = 0,\n                len = this.particles.length;\n            for(i=0; i<len; i++){\n                p = this.particles[i];\n                if(p.bounds !== undefined){\n                    p.constrain(p.bounds);\n                }\n            }\n            if(this.worldBounds !== undefined){\n                for(i=0; i<len; i++){\n                    p = this.particles[i];\n                    p.constrain(this.worldBounds);\n                }\n            }\n        },\n\n        getCurrentBounds: function(){\n            var min = new Vec2D(Number.MAX_VALUE, Number.MAX_VALUE);\n            var max = new Vec2D(Number.MIN_VALUE, Number.MIN_VALUE);\n            var i = 0,\n                pLen = this.particles.length,\n                p;\n            for(; i<pLen; i++){\n                p = this.particles[i];\n                min.minSelf(p);\n                max.maxSelf(p);\n            }\n            return new Rect(min,max);\n        },\n\n        getDrag: function() {\n            return 1 - this.drag;\n        },\n\n        getNumIterations: function(){\n            return this.numIterations;\n        },\n\n        getSpring: function(a,b){\n            var i = 0,\n                sLen = this.springs.length;\n            for(; i<sLen; i++){\n                var s = this.springs[i];\n                if((s.a === a && s.b === b) || (s.a === b && s.b === b)){\n                    return s;\n                }\n            }\n            return undefined;\n        },\n\n        getTimeStep: function(){\n            return this.timeStep;\n        },\n\n        getWorldBounds: function(){\n            return this.worldBounds;\n        },\n\n        removeBehavior: function(c){\n            return internals.removeItemFrom(c,this.behaviors);\n        },\n\n        removeParticle: function(p){\n            return internals.removeItemFrom(p,this.particles);\n        },\n\n        removeSpring: function(s) {\n            return internals.removeItemFrom(s,this.springs);\n        },\n\n        removeSpringElements: function(s){\n            if(this.removeSpring(s) !== undefined){\n                return (this.removeParticle(s.a) && this.removeParticle(s.b));\n            }\n            return false;\n        },\n\n        setDrag: function(drag){\n            this.drag = 1 - drag;\n        },\n\n        setNumIterations: function(numIterations){\n            this.numIterations = numIterations;\n        },\n\n        setTimeStep: function(timeStep){\n            this.timeStep = timeStep;\n            var i =0, l = this.behaviors.length;\n            for(; i<l; i++){\n                this.behaviors[i].configure(timeStep);\n            }\n        },\n\n        setWorldBounds: function(world){\n            this.worldBounds = world;\n            return this;\n        },\n\n        update: function(){\n            this.updateParticles();\n            this.updateSprings();\n            this.constrainToBounds();\n            return this;\n        },\n\n        updateParticles: function(){\n            var i = 0,\n                j = 0,\n                bLen = this.behaviors.length,\n                pLen = this.particles.length,\n                b,\n                p;\n            for(; i<bLen; i++){\n                b = this.behaviors[i];\n                for(j = 0; j<pLen; j++){\n                    b.applyBehavior(this.particles[j]);\n                }\n            }\n            for(j = 0; j<pLen; j++){\n                p = this.particles[j];\n                p.scaleVelocity(this.drag);\n                p.update();\n            }\n        },\n\n        updateSprings: function(){\n            var i = this.numIterations,\n                sLen = this.springs.length,\n                j = 0;\n            for(; i > 0; i--){\n                for(j = 0; j<sLen; j++){\n                    this.springs[j].update(i === 1);\n                }\n            }\n        }\n    };\n\n    module.exports = VerletPhysics2D;\n\n", "\n\n    var Vec2D = require('../../geom/Vec2D');\n\n    //either Vec2D + angle\n    /**\n     * @param {Vec2D | Number} vector | angle\n     * @param {Number} [theta]\n     */\n    var\tAngularConstraint = function(theta_p,theta){\n        if(arguments.length > 1){\n            this.theta = theta;\n            this.rootPos = new Vec2D(theta_p);\n        } else {\n            this.rootPos = new Vec2D();\n            this.theta = theta_p;\n        }\n        //due to lack-of int/float types, no support of theta in degrees\n    };\n\n\n    AngularConstraint.prototype.applyConstraint = function(p){\n        var delta = p.sub(this.rootPos);\n        var heading = Math.floor(delta.heading() / this.theta) * this.theta;\n        p.set(this.rootPos.add(Vec2D.fromTheta(heading).scaleSelf(delta.magnitude())));\n    };\n\n    module.exports = AngularConstraint;\n\n", "\n/**\n * Constrains a particle's movement by locking a given axis to a fixed value.\n */\nvar\tAxisConstraint = function(axis,constraintAmount){\n\tthis.axis = axis;\n\tthis.constraint = constraintAmount;\n};\n\nAxisConstraint.prototype.applyConstraint = function(p){\n\tp.setComponent(this.axis,this.constraint);\n};\n\nmodule.exports = AxisConstraint;\n\n", "\n\tvar Circle = require('../../geom/Circle');\n\t\n\tvar\tCircularConstraint = function(a,b){\n\t\tif(arguments.length == 1){\n\t\t\tthis.circle = a;\n\t\t} else {\n\t\t\tthis.circle = new Circle(a,b);\n\t\t}\n\t};\n\n\tCircularConstraint.prototype.applyConstraint = function(p){\n\t\tif(this.circle.containsPoint(p)){\n\t\t\tp.set(this.circle.add(p.sub(this.circle).normalizeTo(this.circle.getRadius())));\n\t\t}\n\t};\n\n\tmodule.exports = CircularConstraint;\n\n", "\nvar\tMaxConstraint = function(axis,threshold){\n\tthis.axis = axis;\n\tthis.threshold = threshold;\t\n};\n\nMaxConstraint.prototype.applyConstraint = function(p){\n\tif(p.getComponent(this.axis) > this.threshold){\n\t\tp.setComponent(this.axis,this.threshold);\n\t}\n};\n\nmodule.exports = MaxConstraint;\n\n", "\nvar\tMinConstraint = function(axis,threshold){\n\tthis.axis = axis;\n\tthis.threshold = threshold;\n};\n\nMinConstraint.prototype.applyConstraint = function(p){\n\tif(p.getComponent(this.axis) < this.threshold){\n\t\tp.setComponent(this.axis, this.threshold);\n\t}\n};\n\nmodule.exports = MinConstraint;\n\n", "\n\n    var Vec2D = require('../../geom/Vec2D'),\n        has = require('../../internals/has'),\n        Ray2D = require('../../geom/Ray2D'),\n        Rect = require('../../geom/Rect');\n\n    var\tRectConstraint = function(a,b){\n        if(arguments.length == 1){\n            if(typeof a.copy === 'function' ){\n                //if passed in as a toxi.geom.Rect\n                this.rect = a.copy();\n            } else if( has.XYWidthHeight(a) ){\n                //if passed in as { x: y: width: height: }\n                this.rect = new Rect(a);\n            }\n        } else if(arguments.length > 1){\n            this.rect = new Rect(a,b);\n        }\n        if( !this.rect ){\n            throw new Error('Received Incorrect arguments');\n        }\n        this.intersectRay = new Ray2D(this.rect.getCentroid(), new Vec2D());\n    };\n\n    RectConstraint.prototype = {\n        applyConstraint: function(p){\n            if(this.rect.containsPoint(p)){\n                p.set(this.rect.intersectsRay(this.intersectRay.setDirection(this.intersectRay.sub(p)),0,Number.MAX_VALUE));\n            }\n        },\n\n        getBox: function(){\n            return this.rect.copy();\n        },\n\n        setBox: function(rect){\n            this.rect = rect.copy();\n            this.intersectRay.set(this.rect.getCentroid());\n        }\n    };\n\n    module.exports = RectConstraint;\n\n", "var AngularConstraint = require('./constraints/AngularConstraint');\nvar AxisConstraint = require('./constraints/AxisConstraint');\nvar CircularConstraint = require('./constraints/CircularConstraint');\nvar MaxConstraint = require('./constraints/MaxConstraint');\nvar MinConstraint = require('./constraints/MinConstraint');\nvar RectConstraint = require('./constraints/RectConstraint');\n    /** @module toxi/physics2d/constraints */\n\texports.AngularConstraint = AngularConstraint;\n\texports.AxisConstraint = AxisConstraint;\n\texports.CircularConstraint = CircularConstraint;\n\texports.MaxConstraint = MaxConstraint;\n\texports.MinConstraint = MinConstraint;\n\texports.RectConstraint = RectConstraint;\n\n", "\nmodule.exports = {\n\tParticlePath2D: require('./physics2d/ParticlePath2D'),\n\tParticleString2D: require('./physics2d/ParticleString2D'),\n\tPullBackString2D: require('./physics2d/PullBackString2D'),\n\tVerletConstrainedSpring2D: require('./physics2d/VerletConstrainedSpring2D'),\n\tVerletMinDistanceSpring2D: require('./physics2d/VerletMinDistanceSpring2D'),\n\tVerletParticle2D: require('./physics2d/VerletParticle2D'),\n\tVerletPhysics2D: require('./physics2d/VerletPhysics2D'),\n\tVerletSpring2D: require('./physics2d/VerletSpring2D')\n};\n\nmodule.exports.behaviors = require('./physics2d/behaviors');\nmodule.exports.constraints = require('./physics2d/constraints');\n\n"],
  "mappings": "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",
  "names": []
}
